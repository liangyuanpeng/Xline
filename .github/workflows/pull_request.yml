name: PR Checks

on:
  push:
    branches:
      - master
      - e2e_k8s
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    env:
      SCCACHE_GHA_ENABLED: "on"
    container: ghcr.io/xline-kv/build-env:latest
    strategy:
      fail-fast: true
      matrix:
        config:
          - {
              name: "Normal",
              args: "",
              rustflags: "",
              test: "llvm-cov nextest --all-features --workspace --codecov --output-path codecov.info",
            }
          - {
              name: "Madsim",
              args: "--package=simulation",
              rustflags: "--cfg madsim",
              test: "nextest run --package=simulation",
            }
    name: Tests ${{ matrix.config.name }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Configure sccache
        uses: actions/github-script@v6
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Trailing spaces check
        run: ci/scripts/check-trailing-spaces.sh

      - name: Audit
        run: cargo audit

      - name: Format
        run: cargo fmt --all -- --check

      - name: Sort crates
        run: cargo sort --check --workspace

      - name: Check dependencies
        run: cargo machete crates/

      - name: Workspace hack check
        run: cargo hakari generate --diff && cargo hakari manage-deps --dry-run && cargo hakari verify

      - run: sccache --zero-stats > /dev/null

      - name: Clippy ${{ matrix.config.name }}
        env:
          RUSTFLAGS: ${{ matrix.config.rustflags }}
        run: cargo clippy ${{ matrix.config.args }} --all-targets --all-features -- -D warnings

      - name: Sccache stats ${{ matrix.config.name }}
        run: sccache --show-stats && sccache --zero-stats > /dev/null

      - name: Test ${{ matrix.config.name }}
        env:
          RUSTFLAGS: ${{ matrix.config.rustflags }}
        run: cargo ${{ matrix.config.test }}

      - name: Sccache stats ${{ matrix.config.name }}
        run: sccache --show-stats

      - name: Upload coverage to Codecov
        if: matrix.config.name == 'Normal'
        run: ci/scripts/upload-codecov.sh codecov.info

  commit:
    name: Commit Message Validation
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: git show-ref
      - uses: actions-rs/install@v0.1
        with:
          crate: git-cz
          version: latest
      - name: Validate commit messages
        run: git-cz check ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }}

  spell-check:
    name: Spell Check
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check Spelling
        uses: crate-ci/typos@master

  e2e:
    name: e2e_kube
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        k8s:
          - v1.25.3
          - v1.26.0
          - v1.27.3
          - v1.28.7
          - v1.29.2
    steps:
      - uses: actions/checkout@v4
      - name: work with kubernetes
        env:
          K8SVERSION: ${{ matrix.k8s }}
        run: |
          ci/scripts/kind.sh
      - name: chmod
        if: always()
        run: |
          sudo chmod -R 777 /xline/kind
          ls /xline/kind
          ls /xline/kind/pods
          du -h --max-depth=1 /xline/kind
          ls -allh /xline/kind/containers
      - name: upload kind logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: xline_kind_log_${{ matrix.k8s }}
          path: /xline/kind/
